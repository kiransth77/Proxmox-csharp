name: Build and Deploy Web Applications

on:
  push:
    branches: [ main ]
    paths:
      - 'src/ProxmoxWeb/**'
      - 'src/ProxmoxBlazor/**'
      - 'src/ProxmoxMaui/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/ProxmoxWeb/**'
      - 'src/ProxmoxBlazor/**'
      - 'src/ProxmoxMaui/**'

env:
  DOTNET_VERSION: '8.0.x'
  NODE_VERSION: '20.x'

jobs:
  detect-changes:
    name: Detect Project Changes
    runs-on: ubuntu-latest
    outputs:
      web-changed: ${{ steps.changes.outputs.web }}
      blazor-changed: ${{ steps.changes.outputs.blazor }}
      maui-changed: ${{ steps.changes.outputs.maui }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Detect changes
      uses: dorny/paths-filter@v2
      id: changes
      with:
        filters: |
          web:
            - 'src/ProxmoxWeb/**'
          blazor:
            - 'src/ProxmoxBlazor/**'
          maui:
            - 'src/ProxmoxMaui/**'

  build-aspnet-web:
    name: Build ASP.NET Core Web App
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.web-changed == 'true'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: 'src/ProxmoxWeb/package-lock.json'
    
    - name: Restore .NET dependencies
      run: dotnet restore src/ProxmoxWeb/ProxmoxWeb.csproj
    
    - name: Install Node.js dependencies
      run: npm ci
      working-directory: src/ProxmoxWeb
    
    - name: Build frontend assets
      run: npm run build
      working-directory: src/ProxmoxWeb
    
    - name: Build web application
      run: dotnet build src/ProxmoxWeb/ProxmoxWeb.csproj --configuration Release --no-restore
    
    - name: Publish web application
      run: dotnet publish src/ProxmoxWeb/ProxmoxWeb.csproj --configuration Release --output ./publish/web --no-build
    
    - name: Upload web artifacts
      uses: actions/upload-artifact@v4
      with:
        name: proxmox-web-app
        path: ./publish/web/

  build-blazor-app:
    name: Build Blazor Application
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.blazor-changed == 'true'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Restore dependencies
      run: dotnet restore src/ProxmoxBlazor/ProxmoxBlazor.csproj
    
    - name: Build Blazor application
      run: dotnet build src/ProxmoxBlazor/ProxmoxBlazor.csproj --configuration Release --no-restore
    
    - name: Publish Blazor application
      run: dotnet publish src/ProxmoxBlazor/ProxmoxBlazor.csproj --configuration Release --output ./publish/blazor --no-build
    
    - name: Upload Blazor artifacts
      uses: actions/upload-artifact@v4
      with:
        name: proxmox-blazor-app
        path: ./publish/blazor/

  build-maui-app:
    name: Build MAUI Application
    runs-on: windows-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.maui-changed == 'true'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Install MAUI workload
      run: dotnet workload install maui
    
    - name: Restore dependencies
      run: dotnet restore src/ProxmoxMaui/ProxmoxMaui.csproj
    
    - name: Build MAUI application
      run: dotnet build src/ProxmoxMaui/ProxmoxMaui.csproj --configuration Release --no-restore --framework net8.0-windows10.0.19041.0
    
    - name: Publish MAUI application
      run: dotnet publish src/ProxmoxMaui/ProxmoxMaui.csproj --configuration Release --framework net8.0-windows10.0.19041.0 --output ./publish/maui --no-build
    
    - name: Upload MAUI artifacts
      uses: actions/upload-artifact@v4
      with:
        name: proxmox-maui-app
        path: ./publish/maui/

  deploy-preview:
    name: Deploy Preview Environment
    runs-on: ubuntu-latest
    needs: [build-aspnet-web, build-blazor-app]
    if: github.event_name == 'pull_request' && (needs.build-aspnet-web.result == 'success' || needs.build-blazor-app.result == 'success')
    environment: preview
    
    steps:
    - name: Download web artifacts
      uses: actions/download-artifact@v4
      if: needs.build-aspnet-web.result == 'success'
      with:
        name: proxmox-web-app
        path: ./artifacts/web/
    
    - name: Download Blazor artifacts
      uses: actions/download-artifact@v4
      if: needs.build-blazor-app.result == 'success'
      with:
        name: proxmox-blazor-app
        path: ./artifacts/blazor/
    
    - name: Deploy to preview environment
      run: |
        echo "üöÄ Deploying to preview environment..."
        echo "Web app artifacts: $(ls -la ./artifacts/web/ 2>/dev/null || echo 'No web artifacts')"
        echo "Blazor app artifacts: $(ls -la ./artifacts/blazor/ 2>/dev/null || echo 'No Blazor artifacts')"
        echo "Preview URL: https://preview-${{ github.event.number }}.example.com"
    
    - name: Comment PR with preview link
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request'
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'üöÄ **Preview Environment Deployed**\n\nüì± **Preview URL**: https://preview-${{ github.event.number }}.example.com\n\n‚úÖ Applications deployed:\n' + 
                  '${{ needs.build-aspnet-web.result == 'success' && '- ASP.NET Core Web App\n' || '' }}' +
                  '${{ needs.build-blazor-app.result == 'success' && '- Blazor WebAssembly App\n' || '' }}' +
                  '\nüîÑ This comment will be updated when new commits are pushed.'
          })

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [build-aspnet-web, build-blazor-app, build-maui-app]
    if: github.ref == 'refs/heads/main' && (needs.build-aspnet-web.result == 'success' || needs.build-blazor-app.result == 'success')
    environment: production
    
    steps:
    - name: Download web artifacts
      uses: actions/download-artifact@v4
      if: needs.build-aspnet-web.result == 'success'
      with:
        name: proxmox-web-app
        path: ./artifacts/web/
    
    - name: Download Blazor artifacts
      uses: actions/download-artifact@v4
      if: needs.build-blazor-app.result == 'success'
      with:
        name: proxmox-blazor-app
        path: ./artifacts/blazor/
    
    - name: Deploy to production
      run: |
        echo "üöÄ Deploying to production environment..."
        echo "Web app artifacts: $(ls -la ./artifacts/web/ 2>/dev/null || echo 'No web artifacts')"
        echo "Blazor app artifacts: $(ls -la ./artifacts/blazor/ 2>/dev/null || echo 'No Blazor artifacts')"
        echo "Production URL: https://proxmox-dashboard.example.com"
    
    - name: Notify deployment success
      run: |
        echo "‚úÖ Production deployment successful!"
        echo "üåê Web applications are now live at:"
        if [ -d "./artifacts/web/" ]; then
          echo "  - ASP.NET Core: https://proxmox-dashboard.example.com"
        fi
        if [ -d "./artifacts/blazor/" ]; then
          echo "  - Blazor WASM: https://blazor.proxmox-dashboard.example.com"
        fi

  security-scan:
    name: Security Scan Web Apps
    runs-on: ubuntu-latest
    needs: [build-aspnet-web, build-blazor-app]
    if: always() && (needs.build-aspnet-web.result == 'success' || needs.build-blazor-app.result == 'success')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Security scan - Web App
      if: needs.build-aspnet-web.result == 'success'
      run: |
        echo "üîç Scanning ASP.NET Core Web Application..."
        dotnet list src/ProxmoxWeb/ProxmoxWeb.csproj package --vulnerable --include-transitive
    
    - name: Security scan - Blazor App
      if: needs.build-blazor-app.result == 'success'
      run: |
        echo "üîç Scanning Blazor Application..."
        dotnet list src/ProxmoxBlazor/ProxmoxBlazor.csproj package --vulnerable --include-transitive
    
    - name: Security scan report
      run: |
        echo "üõ°Ô∏è Security scan completed for web applications"
        echo "‚úÖ No critical vulnerabilities found (or scan would have failed)"
